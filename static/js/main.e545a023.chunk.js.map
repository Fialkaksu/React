{"version":3,"sources":["components/MovieItem.jsx","components/MovieTabs.jsx","components/App.jsx","utils/api.js","index.js"],"names":["MovieItem","state","willWatch","this","props","data","deleteMovie","addMovieToWillWatch","deleteMovieFromWillWatch","className","src","backdrop_path","poster_path","alt","title","vote_average","type","onClick","setState","React","Component","MovieTabs","nextProps","nextState","console","log","sort_by","updateSortBy","handleClick","value","getClassLink","App","getMovies","fetch","then","response","json","movies","results","movie","updateMovies","filter","item","id","updateMoviesWillWatch","moviesWillWatch","push","prevProps","prevState","map","key","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e545a023.chunk.js","sourcesContent":["import React from \"react\";\n\nclass MovieItem extends React.Component {\n  state = {\n    willWatch: false\n  };\n\n  // размонтирование\n  // к примеру, вызывается перед удалением компонента из DOM\n  // или при применении фильтра, изменение в DOM\n  // componentWillUnmount() {\n  //   console.log('unmount', this.props.data.title);\n  // }\n\n  render() {\n    const {\n      data,\n      deleteMovie,\n      addMovieToWillWatch,\n      deleteMovieFromWillWatch\n    } = this.props;\n    // props.data = {};\n    return (\n      <div className=\"card\">\n        <img\n          className=\"card-img-top\"\n          src={`https://image.tmdb.org/t/p/w500${data.backdrop_path ||\n            data.poster_path}`}\n          alt=\"\"\n        />\n        <div className=\"card-body\">\n          <h6 className=\"card-title\">{data.title}</h6>\n          <div className=\"d-flex justify-content-between align-items-center\">\n            <p className=\"mb-0\">Rating: {data.vote_average}</p>\n            {this.state.willWatch ? (\n              <button\n                type=\"button\"\n                className=\"btn btn-success\"\n                onClick={() => {\n                  this.setState({\n                    willWatch: false\n                  });\n                  deleteMovieFromWillWatch(data);\n                }}\n              >\n                Will Watch\n              </button>\n            ) : (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={() => {\n                    this.setState({\n                      willWatch: true\n                    });\n                    addMovieToWillWatch(data);\n                  }}\n                >\n                  Will Watch\n                </button>\n              )}\n          </div>\n          <button\n            type=\"button\"\n            onClick={() => {\n              deleteMovie(data);\n            }}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieItem;\n","import React from \"react\";\r\n\r\nclass MovieTabs extends React.Component {\r\n  // можем поймать сразу после setState до рендера\r\n  // уже не используется\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    console.log('MovieTabs WillReceiveProps');\r\n    console.log('nextProps sort_by', nextProps.sort_by);\r\n    console.log('currentProps sort_by', this.props.sort_by);\r\n  }\r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    // по-умолчанию выводит true\r\n    // когда в пропсы и состояние что-то пришло, что-то новое, \r\n    // происходит сверка старого и нового DOM, reconsulation\r\n    // return true;\r\n    // если сейчас поменяем на false, кликнем по другому фильтру,\r\n    // DOM перерендерится, но кнопка данного фильтра активной не станет\r\n    if (nextProps.sort_by !== this.props.sort_by) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n    // данным кодом оптимизировали, не будет двойного рендера при загрузке\r\n    // не увидим 'MovieTabs render' при первой загрузке\r\n  }\r\n\r\n  render() {\r\n    const { sort_by, updateSortBy } = this.props;\r\n    const handleClick = value => () => {\r\n      updateSortBy(value);\r\n    };\r\n\r\n    const getClassLink = value => {\r\n      return `nav-link ${sort_by === value ? \"active\" : \"\"}`\r\n    };\r\n\r\n    console.log('MovieTabs render');\r\n\r\n    return (\r\n      <ul className=\"tabs nav nav-pills\">\r\n        <li className=\"nav-item\">\r\n          <div\r\n            className={getClassLink('popularity.desc')}\r\n            onClick={handleClick('popularity.desc')}\r\n          >\r\n            Popularity desc\r\n        </div>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <div\r\n            className={getClassLink('revenue.desc')}\r\n            onClick={handleClick('revenue.desc')}\r\n          >\r\n            Revenue desc\r\n        </div>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <div\r\n            className={getClassLink('vote_average.desc')}\r\n            onClick={handleClick('vote_average.desc')}\r\n          >\r\n            Vote average desc\r\n        </div>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\n// const MovieTabs = (props) => {\r\n//   const { sort_by, updateSortBy } = props;\r\n//   // const handleClick = value => {\r\n//   //   return () => {\r\n//   //     updateSortBy(value);\r\n//   //   }\r\n//   // };\r\n//   const handleClick = value => () => {\r\n//     updateSortBy(value);\r\n//   };\r\n\r\n//   const getClassLink = value => {\r\n//     return `nav-link ${sort_by === value ? \"active\" : \"\"}`\r\n//   };\r\n\r\n//   return (\r\n//     <ul className=\"tabs nav nav-pills\">\r\n//       <li className=\"nav-item\">\r\n//         <div\r\n//           // className={`nav-link ${\r\n//           //   sort_by === 'popularity.desc' ? 'active' : ''\r\n//           // }`}\r\n//           className={getClassLink('popularity.desc')}\r\n//           // onClick={event => {\r\n//           //   updateSortBy('popularity.desc');\r\n//           // }}\r\n//           onClick={handleClick('popularity.desc')}\r\n//         >\r\n//           Popularity desc\r\n//         </div>\r\n//       </li>\r\n//       <li className=\"nav-item\">\r\n//         <div\r\n//           className={getClassLink('revenue.desc')}\r\n//           onClick={handleClick('revenue.desc')}\r\n//         >\r\n//           Revenue desc\r\n//         </div>\r\n//       </li>\r\n//       <li className=\"nav-item\">\r\n//         <div\r\n//           className={getClassLink('vote_average.desc')}\r\n//           onClick={handleClick('vote_average.desc')}\r\n//         >\r\n//           Vote average desc\r\n//         </div>\r\n//       </li>\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\nexport default MovieTabs;\r\n","import React from \"react\";\n// import { moviesData } from \"../moviesData\";\nimport MovieItem from \"./MovieItem\";\nimport { API_URL, API_KEY_3 } from '../utils/api';\nimport MovieTabs from './MovieTabs';\n\n// UI = fn(state, props)\n\n// App = new React.Component()\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      // movies: moviesData,\n      movies: [],\n      moviesWillWatch: [],\n      sort_by: 'revenue.desc'\n    };\n\n    console.log('App constructor');\n  }\n\n  // срабатывает один раз при первоначальном рендере страницы(монтирование)\n  componentDidMount() {\n    console.log('App didMount');\n    // fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}`)\n    //   .then((response) => {\n    //     // console.log('then', data);\n    //     // console.log('then', response);\n    //     return response.json();\n    //   })\n    //   .then((data) => {\n    //     // console.log('data', data);\n    //     this.setState({\n    //       movies: data.results\n    //     })\n    //   })\n    // console.log('afterFetch');\n    this.getMovies();\n  }\n\n  // срабатывает при перерендере(обновление)\n  componentDidUpdate(prevProps, prevState) {\n    console.log('App didUpdate');\n    // console.log('prev', prevProps, prevState);\n    // console.log('this', this.props, this.state);\n    if (prevState.sort_by !== this.state.sort_by) {\n      console.log('App call api');\n      this.getMovies();\n    }\n  }\n\n  getMovies = () => {\n    fetch(`${API_URL}/discover/movie?api_key=${API_KEY_3}&sort_by=${this.state.sort_by}`)\n      .then((response) => {\n        return response.json();\n      })\n      .then((data) => {\n        this.setState({\n          movies: data.results\n        })\n      })\n  }\n\n  deleteMovie = movie => {\n    // console.log(movie.id);\n    const updateMovies = this.state.movies.filter(item => item.id !== movie.id);\n    // console.log(updateMovies);\n\n    // this.state.movies = updateMovies;\n    this.setState({\n      movies: updateMovies\n    });\n  };\n\n  addMovieToWillWatch = movie => {\n    const updateMoviesWillWatch = [...this.state.moviesWillWatch];\n    updateMoviesWillWatch.push(movie);\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    });\n  };\n\n  deleteMovieFromWillWatch = movie => {\n    const updateMoviesWillWatch = this.state.moviesWillWatch.filter(\n      item => item.id !== movie.id\n    );\n\n    this.setState({\n      moviesWillWatch: updateMoviesWillWatch\n    });\n  };\n\n  updateSortBy = value => {\n    this.setState({\n      sort_by: value\n    })\n  }\n\n  render() {\n    // console.log(\"render\", this);\n    console.log('App render', this.state.sort_by);\n    return (\n      <div className=\"container\">\n        <div className=\"row mt-4\">\n          <div className=\"col-9\">\n            <div className=\"row mb-4\">\n              <div className=\"col-12\">\n                <MovieTabs\n                  sort_by={this.state.sort_by}\n                  updateSortBy={this.updateSortBy}\n                />\n              </div>\n            </div>\n            <div className=\"row\">\n              {this.state.movies.map(movie => {\n                return (\n                  <div className=\"col-6 mb-4\" key={movie.id}>\n                    <MovieItem\n                      data={movie}\n                      deleteMovie={this.deleteMovie}\n                      addMovieToWillWatch={this.addMovieToWillWatch}\n                      deleteMovieFromWillWatch={this.deleteMovieFromWillWatch}\n                    />\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n          <div className=\"col-3\">\n            <h4>Will Watch: {this.state.moviesWillWatch.length} movies</h4>\n            <ul className=\"list-group\">\n              {this.state.moviesWillWatch.map(movie => (\n                <li key={movie.id} className=\"list-group-item\">\n                  <div className=\"d-flex justify-content-between\">\n                    <p>{movie.title}</p>\n                    <p>{movie.vote_average}</p>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","export const API_URL = \"https://api.themoviedb.org/3\";\n\nexport const API_KEY_3 = \"3f4ca4f3a9750da53450646ced312397\";\n\nexport const API_KEY_4 =\n  \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIzZjRjYTRmM2E5NzUwZGE1MzQ1MDY0NmNlZDMxMjM5NyIsInN1YiI6IjVhYzlmNWRkOTI1MTQxNjJhZTA1Njk0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Fc4f9DVB6pFWh6hIjYe0NCC4pImdmNzDIfi_3Nb3tC4\";\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./stylesheets/index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}